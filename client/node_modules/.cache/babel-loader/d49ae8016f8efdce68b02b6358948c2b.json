{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\barberia\\\\client\\\\src\\\\pages\\\\PrivateRoute.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const auth = localStorage.getItem(\"token\");\n\n  const isAuthenticated = () => {\n    let isValid = true;\n\n    try {\n      isValid = decode(auth);\n    } catch (error) {\n      return false;\n    }\n\n    return isValid;\n  };\n\n  const MyRoute = props => isAuthenticated() ? /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 48\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(MyRoute, { ...rest,\n    component: Component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/xampp/htdocs/barberia/client/src/pages/PrivateRoute.jsx"],"names":["React","Route","Redirect","decode","PrivateRoute","component","Component","rest","auth","localStorage","getItem","isAuthenticated","isValid","error","MyRoute","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,YAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAI;AACFA,MAAAA,OAAO,GAAGT,MAAM,CAACK,IAAD,CAAhB;AACD,KAFD,CAEE,OAAOK,KAAP,EAAc;AACd,aAAO,KAAP;AACD;;AACD,WAAOD,OAAP;AACD,GARD;;AAUA,QAAME,OAAO,GAAIC,KAAD,IACdJ,eAAe,kBAAK,QAAC,KAAD,OAAWI;AAAX;AAAA;AAAA;AAAA;AAAA,UAAL,gBAA4B,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAD7C;;AAGA,sBAAO,QAAC,OAAD,OAAaR,IAAb;AAAmB,IAAA,SAAS,EAAED;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjBD;;KAAMF,Y;AAmBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport decode from \"jwt-decode\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const auth = localStorage.getItem(\"token\");\r\n\r\n  const isAuthenticated = () => {\r\n    let isValid = true;\r\n    try {\r\n      isValid = decode(auth);\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const MyRoute = (props) =>\r\n    isAuthenticated() ? <Route {...props} /> : <Redirect to=\"/login\" />;\r\n\r\n  return <MyRoute {...rest} component={Component} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}