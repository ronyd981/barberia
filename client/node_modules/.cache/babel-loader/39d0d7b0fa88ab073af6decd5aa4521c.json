{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\barberia\\\\client\\\\src\\\\pages\\\\PrivateLogin.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport decode from \"jwt-decode\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateLogin = ({\n  component: Component,\n  ...rest\n}) => {\n  // const auth = localStorage.getItem(\"token\");\n  const cookie = new Cookies();\n  cookie.get(\"token\");\n\n  const isAuthenticated = () => {\n    let isValid = true;\n\n    try {\n      console.log(cookie.cookies[0]);\n      isValid = decode(cookie);\n      console.log(\"Aqui llego\");\n    } catch (error) {\n      console.log(\"object\");\n      return false;\n    }\n\n    return isValid;\n  }; // const isAuthenticated = () => {\n  //   let isValid = true;\n  //   try {\n  //     isValid = decode(auth);\n  //   } catch (error) {\n  //     return false;\n  //   }\n  //   return isValid;\n  // };\n\n\n  const MyRoute = props => isAuthenticated() ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 47\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(MyRoute, { ...rest,\n    component: Component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\n_c = PrivateLogin;\nexport default PrivateLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateLogin\");","map":{"version":3,"sources":["C:/xampp/htdocs/barberia/client/src/pages/PrivateLogin.jsx"],"names":["React","Route","Redirect","decode","Cookies","PrivateLogin","component","Component","rest","cookie","get","isAuthenticated","isValid","console","log","cookies","error","MyRoute","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D;AACA,QAAMC,MAAM,GAAG,IAAIL,OAAJ,EAAf;AACAK,EAAAA,MAAM,CAACC,GAAP,CAAW,OAAX;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,OAAP,CAAe,CAAf,CAAZ;AACAH,MAAAA,OAAO,GAAGT,MAAM,CAACM,MAAD,CAAhB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAJD,CAIE,OAAOE,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAO,KAAP;AACD;;AACD,WAAOF,OAAP;AACD,GAXD,CAL0D,CAiB1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMK,OAAO,GAAIC,KAAD,IACdP,eAAe,kBAAK,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAL,gBAA2B,QAAC,KAAD,OAAWO;AAAX;AAAA;AAAA;AAAA;AAAA,UAD5C;;AAGA,sBAAO,QAAC,OAAD,OAAaV,IAAb;AAAmB,IAAA,SAAS,EAAED;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA/BD;;KAAMF,Y;AAiCN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport decode from \"jwt-decode\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst PrivateLogin = ({ component: Component, ...rest }) => {\r\n  // const auth = localStorage.getItem(\"token\");\r\n  const cookie = new Cookies();\r\n  cookie.get(\"token\");\r\n\r\n  const isAuthenticated = () => {\r\n    let isValid = true;\r\n    try {\r\n      console.log(cookie.cookies[0]);\r\n      isValid = decode(cookie);\r\n      console.log(\"Aqui llego\");\r\n    } catch (error) {\r\n      console.log(\"object\");\r\n      return false;\r\n    }\r\n    return isValid;\r\n  };\r\n  // const isAuthenticated = () => {\r\n  //   let isValid = true;\r\n  //   try {\r\n  //     isValid = decode(auth);\r\n  //   } catch (error) {\r\n  //     return false;\r\n  //   }\r\n  //   return isValid;\r\n  // };\r\n\r\n  const MyRoute = (props) =>\r\n    isAuthenticated() ? <Redirect to=\"/\" /> : <Route {...props} />;\r\n\r\n  return <MyRoute {...rest} component={Component} />;\r\n};\r\n\r\nexport default PrivateLogin;\r\n"]},"metadata":{},"sourceType":"module"}