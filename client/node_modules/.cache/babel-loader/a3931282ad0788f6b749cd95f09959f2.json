{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\barberia\\\\client\\\\src\\\\pages\\\\PrivateLogin.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateLogin = ({\n  component: Component,\n  ...rest\n}) => {\n  const auth = localStorage.getItem(\"token\");\n\n  const isAuthenticated = () => {\n    let isValid = true;\n\n    try {\n      isValid = decode(auth);\n    } catch (error) {\n      return false;\n    }\n\n    return isValid;\n  };\n\n  const MyRoute = props => isAuthenticated() ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this) : /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(MyRoute, { ...rest,\n    component: Component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PrivateLogin;\nexport default PrivateLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateLogin\");","map":{"version":3,"sources":["C:/xampp/htdocs/barberia/client/src/pages/PrivateLogin.jsx"],"names":["React","Route","Redirect","decode","PrivateLogin","component","Component","rest","auth","localStorage","getItem","isAuthenticated","isValid","error","MyRoute","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,KADJ,EAEIC,QAFJ,QAGO,kBAHP;AAIA,OAAOC,MAAP,MAAmB,YAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AACtD,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC1B,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAI;AACAA,MAAAA,OAAO,GAAGT,MAAM,CAACK,IAAD,CAAhB;AACH,KAFD,CAEE,OAAOK,KAAP,EAAc;AACZ,aAAO,KAAP;AACH;;AACD,WAAOD,OAAP;AACH,GARD;;AAUA,QAAME,OAAO,GAAIC,KAAD,IACZJ,eAAe,kBACZ,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADY,gBAEZ,QAAC,KAAD,OAAWI;AAAX;AAAA;AAAA;AAAA;AAAA,UAHP;;AAMA,sBACI,QAAC,OAAD,OAAaR,IAAb;AAAmB,IAAA,SAAS,EAAED;AAA9B;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAtBD;;KAAMF,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport {\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom'\r\nimport decode from 'jwt-decode'\r\n\r\nconst PrivateLogin = ({component: Component, ...rest}) => {\r\n    const auth = localStorage.getItem(\"token\");\r\n\r\n    const isAuthenticated = () => {\r\n        let isValid = true\r\n        try {\r\n            isValid = decode(auth)\r\n        } catch (error) {\r\n            return false\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    const MyRoute = (props) => (\r\n        isAuthenticated()\r\n         ? <Redirect to=\"/\" />\r\n         : <Route {...props} />\r\n    )\r\n\r\n    return (\r\n        <MyRoute {...rest} component={Component} />\r\n    )\r\n}\r\n\r\nexport default PrivateLogin\r\n"]},"metadata":{},"sourceType":"module"}