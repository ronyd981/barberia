{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\barberia\\\\client\\\\src\\\\pages\\\\PrivateLogin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\nimport decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateLogin = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const [state, setstate] = useState(initialState);\n  const history = useHistory();\n  const auth = localStorage.getItem(\"token\"); // const MyRoute = (props) =>\n  //   isAuthenticated() ? <Redirect to=\"/\" /> : <Route {...props} />;\n\n  const isAuthenticated = async () => {\n    let isValid = true;\n\n    try {\n      isValid = await decode(auth);\n    } catch (error) {\n      return false;\n    }\n\n    return isValid;\n  };\n\n  isAuthenticated(); // console.log(\"object\");\n  // isAuthenticated() ? history.push(\"/\") : <Redirect to=\"/login\" />;\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    component: Component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this); // return <div>Working</div>;\n};\n\n_s(PrivateLogin, \"9yOZ3a2TR20ZbxKb3wNdeH1XMB0=\", false, function () {\n  return [useHistory];\n});\n\n_c = PrivateLogin;\nexport default PrivateLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateLogin\");","map":{"version":3,"sources":["C:/xampp/htdocs/barberia/client/src/pages/PrivateLogin.jsx"],"names":["React","useEffect","useState","Route","Redirect","useHistory","decode","PrivateLogin","component","Component","rest","state","setstate","initialState","history","auth","localStorage","getItem","isAuthenticated","isValid","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,OAAOC,MAAP,MAAmB,YAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC1D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACW,YAAD,CAAlC;AACA,QAAMC,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAMU,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb,CAH0D,CAK1D;AACA;;AAEA,QAAMC,eAAe,GAAG,YAAY;AAClC,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAI;AACFA,MAAAA,OAAO,GAAG,MAAMb,MAAM,CAACS,IAAD,CAAtB;AACD,KAFD,CAEE,OAAOK,KAAP,EAAc;AACd,aAAO,KAAP;AACD;;AACD,WAAOD,OAAP;AACD,GARD;;AAUAD,EAAAA,eAAe,GAlB2C,CAoB1D;AACA;;AAEA,sBAAO,QAAC,KAAD,OAAWR,IAAX;AAAiB,IAAA,SAAS,EAAED;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP,CAvB0D,CAwB1D;AACD,CAzBD;;GAAMF,Y;UAEYF,U;;;KAFZE,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport decode from \"jwt-decode\";\r\n\r\nconst PrivateLogin = ({ component: Component, ...rest }) => {\r\n  const [state, setstate] = useState(initialState);\r\n  const history = useHistory();\r\n  const auth = localStorage.getItem(\"token\");\r\n\r\n  // const MyRoute = (props) =>\r\n  //   isAuthenticated() ? <Redirect to=\"/\" /> : <Route {...props} />;\r\n\r\n  const isAuthenticated = async () => {\r\n    let isValid = true;\r\n    try {\r\n      isValid = await decode(auth);\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  isAuthenticated();\r\n\r\n  // console.log(\"object\");\r\n  // isAuthenticated() ? history.push(\"/\") : <Redirect to=\"/login\" />;\r\n\r\n  return <Route {...rest} component={Component} />;\r\n  // return <div>Working</div>;\r\n};\r\n\r\nexport default PrivateLogin;\r\n"]},"metadata":{},"sourceType":"module"}