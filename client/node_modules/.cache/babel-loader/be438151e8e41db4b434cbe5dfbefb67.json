{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\barberia\\\\client\\\\src\\\\pages\\\\PrivateLogin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateLogin = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const auth = localStorage.getItem(\"token\");\n\n  const isAuthenticated = () => {\n    let isValid = true;\n\n    try {\n      isValid = decode(auth);\n    } catch (error) {\n      return false;\n    }\n\n    return isValid;\n  };\n\n  const MyRoute = props => isAuthenticated() ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 47\n  }, this);\n\n  useEffect(() => {}, []); //   return <MyRoute {...rest} component={Component} />;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Working\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PrivateLogin, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PrivateLogin;\nexport default PrivateLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateLogin\");","map":{"version":3,"sources":["C:/xampp/htdocs/barberia/client/src/pages/PrivateLogin.jsx"],"names":["React","useEffect","Route","Redirect","decode","PrivateLogin","component","Component","rest","auth","localStorage","getItem","isAuthenticated","isValid","error","MyRoute","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,YAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC1D,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAI;AACFA,MAAAA,OAAO,GAAGT,MAAM,CAACK,IAAD,CAAhB;AACD,KAFD,CAEE,OAAOK,KAAP,EAAc;AACd,aAAO,KAAP;AACD;;AACD,WAAOD,OAAP;AACD,GARD;;AAUA,QAAME,OAAO,GAAIC,KAAD,IACdJ,eAAe,kBAAK,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAL,gBAA2B,QAAC,KAAD,OAAWI;AAAX;AAAA;AAAA;AAAA;AAAA,UAD5C;;AAGAf,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT,CAhB0D,CAkB1D;;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApBD;;GAAMI,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport decode from \"jwt-decode\";\r\n\r\nconst PrivateLogin = ({ component: Component, ...rest }) => {\r\n  const auth = localStorage.getItem(\"token\");\r\n\r\n  const isAuthenticated = () => {\r\n    let isValid = true;\r\n    try {\r\n      isValid = decode(auth);\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  const MyRoute = (props) =>\r\n    isAuthenticated() ? <Redirect to=\"/\" /> : <Route {...props} />;\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  //   return <MyRoute {...rest} component={Component} />;\r\n  return <div>Working</div>;\r\n};\r\n\r\nexport default PrivateLogin;\r\n"]},"metadata":{},"sourceType":"module"}